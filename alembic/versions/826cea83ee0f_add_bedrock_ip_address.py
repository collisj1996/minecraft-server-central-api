"""add bedrock ip address

Revision ID: 826cea83ee0f
Revises: f17da69eab2d
Create Date: 2023-09-22 23:19:18.592612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm, text


# revision identifiers, used by Alembic.
revision: str = "826cea83ee0f"
down_revision: Union[str, None] = "f17da69eab2d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # delete all servers
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    session.execute(text("DELETE FROM vote"))
    session.execute(text("DELETE FROM server_gameplay"))
    session.execute(text("DELETE FROM server"))

    session.commit()
    session.close()

    op.add_column("server", sa.Column("java_ip_address", sa.Text(), nullable=True))
    op.add_column("server", sa.Column("java_port", sa.Integer(), nullable=True))
    op.add_column("server", sa.Column("bedrock_ip_address", sa.Text(), nullable=True))
    op.add_column("server", sa.Column("bedrock_port", sa.Text(), nullable=True))
    op.drop_column("server", "port")
    op.drop_column("server", "ip_address")
    op.create_check_constraint(
        "check_ip_address",
        "server",
        sa.text("(java_ip_address IS NOT NULL OR bedrock_ip_address IS NOT NULL)"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "server",
        sa.Column("ip_address", sa.TEXT(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "server", sa.Column("port", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_column("server", "bedrock_port")
    op.drop_column("server", "bedrock_ip_address")
    op.drop_column("server", "java_port")
    op.drop_column("server", "java_ip_address")
    op.drop_constraint("check_ip_address", "server", type_="check")
    # ### end Alembic commands ###
